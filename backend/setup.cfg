[tool:pytest]
DJANGO_SETTINGS_MODULE = config.settings.test
python_files = test_*.py
norecursedirs =
    *.egg
    .eggs
    dist
    build
    docs
    .tox
    .git
    __pycache__
    config
    settings
    data
addopts =
    --ds=config.settings.test
    --strict
    --create-db
    --nomigrations
    --cov=.
    --cov-config=setup.cfg
    --cov-report=term


[flake8]
format = wemake
show-source = True
statistics = False
doctests = True
enable-extensions = G

max-complexity = 6
max-line-length = 80
multiline-quotes = '''
pytest-fixture-no-parentheses = true
exclude =
  .git
  __pycache__
  .venv
  .eggs
  *.egg
ignore =
    # D100 Missing docstring in public module
    D100,
    # D104 Missing docstring in public package
    D104,
    # D106 Missing docstring in public nested class
    D106,
    # DAR000 Unexpected exception in darglint: <message>
    DAR000,
    # W503 line break before binary operator
    W503,
    # WPS412 Found `__init__.py` module with logic
    WPS412,
per_file_ignores =
    # F403  'from config.settings.base import *' used; unable to detect undefined names
    # F405  'env' may be undefined, or defined from star imports: config.settings.base
    # WPS347 Found vague import that may cause confusion: *
    # WPS407 Found mutable module constant
    # WPS226  Found string constant over-use: <string_constant> > 3
    config/settings/*.py: F403, F405, WPS226, WPS347, WPS407,
    # D101 Missing docstring in public class
    # WPS102 Found incorrect module name pattern
    # WPS301 Found dotted raw import: django.core.validators
    */migrations/*.py: D101, WPS102, WPS301,
    # D101  Missing docstring in public class
    # S101 Use of assert detected ...
    # WPS116 found consecutive underscores name: pytest__factoryboy__fixture
    # WPS210 found too many local variables: n > max_n
    # WPS211 Forbids to have too many arguments for a function or method
    # WPS226 Forbids to over-use string constants
    # WPS432 Found magic number
    # WPS442 Found outer scope names shadowing
    test_*.py: D101, S101, WPS116, WPS210, WPS211, WPS226, WPS432, WPS442,
    # D101: Missing docstring in public class
    factories.py: D101,


[darglint]
docstring_style = numpy
strictness = long


[isort]
line_length = 80
indent = 4
include_trailing_comma = true
use_parentheses = true
multi_line_output = 3
# add one line between `import abc` and `from abc import ABC`
lines_between_types = 1
# split imports to multline, when 2 or more imports in one line
force_grid_wrap = 2
# Django related settings
known_django = django
# add projects module to first party category
known_first_party = apps, config, tests
# place imports, which section cannot be determined, to third party category
default_section = THIRDPARTY
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER


[mypy]
allow_redefinition = False
check_untyped_defs = True
disallow_untyped_decorators = True
disallow_any_explicit = True
disallow_any_generics = True
disallow_untyped_calls = True
ignore_errors = False
ignore_missing_imports = True
implicit_reexport = False
strict_optional = True
strict_equality = True
no_implicit_optional = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
warn_no_return = True
plugins =
    mypy_django_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = "config.settings.test"


[coverage:run]
branch = True
source = .
omit = *migrations*, *tests*, *config*, manage.py, *conftest.py
data_file = .tests_reports/.coverage

[coverage:report]
skip_covered = True
show_missing = True
sort = Cover
# TODO: find the most reasonable ``fail_under`` value and set it
# fail_under = 95

[coverage:xml]
output = .tests_reports/coverage.xml

[coverage:json]
output = .tests_reports/coverage.json

[coverage:html]
directory = .tests_reports/htmlcov
